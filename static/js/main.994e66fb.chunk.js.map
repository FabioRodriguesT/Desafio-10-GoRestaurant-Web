{"version":3,"sources":["assets/logo.svg","components/Header/styles.ts","components/Header/index.tsx","services/api.ts","components/Food/styles.ts","components/Food/index.tsx","components/ModalAddFood/styles.ts","components/Modal/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/ModalAddFood/index.tsx","components/ModalEditFood/styles.ts","components/ModalEditFood/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Container","styled","div","Header","openModal","src","Logo","alt","type","onClick","className","size","api","axios","create","baseURL","props","available","css","Food","food","handleDelete","handleEditFood","useState","isAvailable","setIsAvailable","a","put","id","console","log","image","name","description","price","data-testid","htmlFor","checked","onChange","Form","Unform","Modal","children","isOpen","setIsOpen","modalStatus","setModalStatus","useEffect","shouldCloseOnOverlayClick","onRequestClose","ariaHideApp","style","content","top","left","right","bottom","marginRight","transform","background","color","borderRadius","width","border","overlay","backgroundColor","isFocused","isFilled","Input","Icon","icon","rest","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","handleInputFocus","useCallback","handleInputBlur","current","value","ref","path","onFocus","onBlur","ModalAddFood","handleAddFood","formRef","handleSubmit","data","onSubmit","placeholder","ModalEditFood","editingFood","handleUpdateFood","initialData","FoodsContainer","Dashboard","foods","setFoods","setEditingFood","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","post","response","map","mappedFood","handleDeleteFood","delete","filter","toggleModal","toggleEditModal","get","loadFoods","key","Routes","exact","component","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.994e66fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.633a71f0.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: #c72828;\n  padding: 30px 0;\n\n  header {\n    width: 1280px;\n    margin: 0 auto;\n    padding: 0 0 160px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    nav {\n      div {\n        button {\n          font-weight: 600;\n          border-radius: 8px;\n          border: 0;\n          background: #39b100;\n          color: #fff;\n\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n\n          .text {\n            padding: 16px 24px;\n          }\n\n          .icon {\n            display: flex;\n            padding: 16px 16px;\n            background: #41c900;\n            border-radius: 0 8px 8px 0;\n            margin: 0 auto;\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport { FiPlusSquare } from 'react-icons/fi';\nimport { Container } from './styles';\n\nimport Logo from '../../assets/logo.svg';\n\ninterface IHeaderProps {\n  openModal: () => void;\n}\n\nconst Header: React.FC<IHeaderProps> = ({ openModal }) => (\n  <Container>\n    <header>\n      <img src={Logo} alt=\"GoRestaurant\" />\n      <nav>\n        <div>\n          <button\n            type=\"button\"\n            onClick={openModal}\n          >\n            <div className=\"text\">Novo Prato</div>\n            <div className=\"icon\">\n              <FiPlusSquare size={24} />\n            </div>\n          </button>\n        </div>\n      </nav>\n    </header>\n  </Container>\n);\n\nexport default Header;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: ' http://localhost:3333',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\n\ninterface IFoodPlateProps {\n  available: boolean;\n}\n\nexport const Container = styled.div<IFoodPlateProps>`\n  background: #f0f0f5;\n  border-radius: 8px;\n\n  header {\n    background: #ffb84d;\n    border-radius: 8px 8px 0px 0px;\n    height: 192px;\n    overflow: hidden;\n    transition: 0.3s opacity;\n    text-align: center;\n\n    ${props =>\n      !props.available &&\n      css`\n        opacity: 0.3;\n      `};\n\n    img {\n      pointer-events: none;\n      user-select: none;\n    }\n  }\n\n  section.body {\n    padding: 30px;\n\n    h2 {\n      color: #3d3d4d;\n    }\n\n    p {\n      color: #3d3d4d;\n\n      margin-top: 16px;\n    }\n\n    .price {\n      font-style: normal;\n      font-size: 24px;\n      line-height: 34px;\n      color: #39b100;\n\n      b {\n        font-weight: 600;\n      }\n    }\n  }\n\n  section.footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 20px 30px;\n    background: #e4e4eb;\n    border-radius: 0px 0px 8px 8px;\n\n    div.icon-container {\n      display: flex;\n\n      button {\n        background: #fff;\n        padding: 10px;\n        border-radius: 8px;\n        display: flex;\n        border: none;\n        transition: 0.1s;\n\n        svg {\n          color: #3d3d4d;\n        }\n\n        & + button {\n          margin-left: 6px;\n        }\n      }\n    }\n\n    div.availability-container {\n      display: flex;\n      align-items: center;\n\n      p {\n        color: #3d3d4d;\n      }\n\n      .switch {\n        position: relative;\n        display: inline-block;\n        width: 88px;\n        height: 32px;\n        margin-left: 12px;\n\n        & input {\n          opacity: 0;\n          width: 0;\n          height: 0;\n        }\n\n        .slider {\n          position: absolute;\n          cursor: pointer;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: #c72828;\n          -webkit-transition: 0.4s;\n          transition: 0.4s;\n          border-radius: 16px;\n\n          &:before {\n            position: absolute;\n            content: '';\n            height: 20px;\n            width: 40px;\n            left: 8px;\n            bottom: 6px;\n            background-color: white;\n            -webkit-transition: 0.4s;\n            transition: 0.4s;\n            border-radius: 10px;\n          }\n        }\n\n        input:checked + .slider {\n          background-color: #39b100;\n        }\n\n        input:focus + .slider {\n          box-shadow: 0 0 1px #2196f3;\n        }\n\n        input:checked + .slider:before {\n          -webkit-transform: translateX(32px);\n          -ms-transform: translateX(32px);\n          transform: translateX(32px);\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\n\nimport { FiEdit3, FiTrash } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport { Container } from './styles';\n\ninterface IFoodPlate {\n  id: number;\n  name: string;\n  image: string;\n  price: string;\n  description: string;\n  available: boolean;\n}\n\ninterface IProps {\n  food: IFoodPlate;\n  handleDelete: (id: number) => {};\n  handleEditFood: (food: IFoodPlate) => void;\n}\n\nconst Food: React.FC<IProps> = ({\n  food,\n  handleDelete,\n  handleEditFood,\n}: IProps) => {\n  const [isAvailable, setIsAvailable] = useState(food.available);\n\n  async function toggleAvailable(): Promise<void> {\n    try {\n      await api.put(`/foods/${food.id}`, {\n        ...food,\n        available: !isAvailable,\n      });\n\n      setIsAvailable(!isAvailable);\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  function setEditingFood(): void {\n    handleEditFood(food);\n  }\n\n  return (\n    <Container available={isAvailable}>\n      <header>\n        <img src={food.image} alt={food.name} />\n      </header>\n      <section className=\"body\">\n        <h2>{food.name}</h2>\n        <p>{food.description}</p>\n        <p className=\"price\">\n          R$ <b>{food.price}</b>\n        </p>\n      </section>\n      <section className=\"footer\">\n        <div className=\"icon-container\">\n          <button\n            type=\"button\"\n            className=\"icon\"\n            onClick={() => setEditingFood()}\n            data-testid={`edit-food-${food.id}`}\n          >\n            <FiEdit3 size={20} />\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"icon\"\n            onClick={() => handleDelete(food.id)}\n            data-testid={`remove-food-${food.id}`}\n          >\n            <FiTrash size={20} />\n          </button>\n        </div>\n\n        <div className=\"availability-container\">\n          <p>{isAvailable ? 'Disponível' : 'Indisponível'}</p>\n\n          <label htmlFor={`available-switch-${food.id}`} className=\"switch\">\n            <input\n              id={`available-switch-${food.id}`}\n              type=\"checkbox\"\n              checked={isAvailable}\n              onChange={toggleAvailable}\n              data-testid={`change-status-food-${food.id}`}\n            />\n            <span className=\"slider\" />\n          </label>\n        </div>\n      </section>\n    </Container>\n  );\n};\n\nexport default Food;\n","import styled from 'styled-components';\nimport { Form as Unform } from '@unform/web';\n\nexport const Form = styled(Unform)`\n  padding: 48px 40px;\n  display: flex;\n  flex-direction: column;\n\n  h1 {\n    font-weight: 600;\n    font-size: 36px;\n    line-height: 36px;\n    margin-bottom: 40px;\n  }\n\n  button {\n    margin-top: 48px;\n    align-self: flex-end;\n  }\n\n  button {\n    font-weight: 600;\n    border-radius: 8px;\n    border: 0;\n    background: #39b100;\n    color: #fff;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    .text {\n      padding: 16px 24px;\n    }\n\n    .icon {\n      display: flex;\n      padding: 16px 16px;\n      background: #41c900;\n      border-radius: 0 8px 8px 0;\n      margin: 0 auto;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport ReactModal from 'react-modal';\n\ninterface IFoodPlate {\n  id: number;\n  name: string;\n  image: string;\n  price: string;\n  description: string;\n  available: boolean;\n}\n\ninterface IModalProps {\n  children: any;\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\nconst Modal: React.FC<IModalProps> = ({ children, isOpen, setIsOpen }) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <ReactModal\n      shouldCloseOnOverlayClick={!false}\n      onRequestClose={setIsOpen}\n      isOpen={modalStatus}\n      ariaHideApp={false}\n      style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          background: '#F0F0F5',\n          color: '#000000',\n          borderRadius: '8px',\n          width: '736px',\n          border: 'none',\n        },\n        overlay: {\n          backgroundColor: '#121214e6',\n        },\n      }}\n    >\n      {children}\n    </ReactModal>\n  );\n};\n\nexport default Modal;\n","import styled, { css } from 'styled-components';\n\ninterface IContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n}\n\nexport const Container = styled.div<IContainerProps>`\n  display: flex;\n  align-items: center;\n\n  background: #fff;\n  border-radius: 8px;\n  padding: 18px 24px;\n  width: 100%;\n  font-size: 16px;\n\n  & + div {\n    margin-top: 24px;\n  }\n\n  h1 {\n    margin-bottom: 40px;\n    font-weight: 600;\n    font-size: 36px;\n    line-height: 36px;\n  }\n\n  ${props =>\n    props.isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${props =>\n    props.isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #b7b7cc;\n\n    &::placeholder {\n      color: #b7b7cc;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\n\nimport { Container } from './styles';\n\ninterface IInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<IInputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n    </Container>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useCallback } from 'react';\n\nimport { FiCheckSquare } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from './styles';\nimport Modal from '../Modal';\nimport Input from '../Input';\n\ninterface IFoodPlate {\n  id: number;\n  name: string;\n  image: string;\n  price: string;\n  description: string;\n  available: boolean;\n}\n\ninterface ICreateFoodData {\n  name: string;\n  image: string;\n  price: string;\n  description: string;\n}\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  handleAddFood: (food: Omit<IFoodPlate, 'id' | 'available'>) => void;\n}\n\nconst ModalAddFood: React.FC<IModalProps> = ({\n  isOpen,\n  setIsOpen,\n  handleAddFood,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(\n    async (data: ICreateFoodData) => {\n      handleAddFood(data);\n\n      setIsOpen();\n    },\n    [handleAddFood, setIsOpen],\n  );\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <Form ref={formRef} onSubmit={handleSubmit}>\n        <h1>Novo Prato</h1>\n        <Input name=\"image\" placeholder=\"Cole o link aqui\" />\n\n        <Input name=\"name\" placeholder=\"Ex: Moda Italiana\" />\n        <Input name=\"price\" placeholder=\"Ex: 19.90\" />\n\n        <Input name=\"description\" placeholder=\"Descrição\" />\n        <button type=\"submit\" data-testid=\"add-food-button\">\n          <p className=\"text\">Adicionar Prato</p>\n          <div className=\"icon\">\n            <FiCheckSquare size={24} />\n          </div>\n        </button>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalAddFood;\n","import styled from 'styled-components';\nimport { Form as Unform } from '@unform/web';\n\nexport const Form = styled(Unform)`\n  padding: 48px 40px;\n  display: flex;\n  flex-direction: column;\n\n  h1 {\n    font-weight: 600;\n    font-size: 36px;\n    line-height: 36px;\n    margin-bottom: 40px;\n  }\n\n  button {\n    margin-top: 48px;\n    align-self: flex-end;\n  }\n\n  button {\n    font-weight: 600;\n    border-radius: 8px;\n    border: 0;\n    background: #39b100;\n    color: #fff;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    .text {\n      padding: 16px 24px;\n    }\n\n    .icon {\n      display: flex;\n      padding: 16px 16px;\n      background: #41c900;\n      border-radius: 0 8px 8px 0;\n      margin: 0 auto;\n    }\n  }\n`;\n","import React, { useRef, useCallback } from 'react';\n\nimport { FiCheckSquare } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from './styles';\nimport Modal from '../Modal';\nimport Input from '../Input';\n\ninterface IFoodPlate {\n  id: number;\n  name: string;\n  image: string;\n  price: string;\n  description: string;\n  available: boolean;\n}\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  handleUpdateFood: (food: Omit<IFoodPlate, 'id' | 'available'>) => void;\n  editingFood: IFoodPlate;\n}\n\ninterface IEditFoodData {\n  name: string;\n  image: string;\n  price: string;\n  description: string;\n}\n\nconst ModalEditFood: React.FC<IModalProps> = ({\n  isOpen,\n  setIsOpen,\n  editingFood,\n  handleUpdateFood,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(\n    async (data: IEditFoodData) => {\n      handleUpdateFood(data);\n\n      setIsOpen();\n    },\n    [handleUpdateFood, setIsOpen],\n  );\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <Form ref={formRef} onSubmit={handleSubmit} initialData={editingFood}>\n        <h1>Editar Prato</h1>\n        <Input name=\"image\" placeholder=\"Cole o link aqui\" />\n\n        <Input name=\"name\" placeholder=\"Ex: Moda Italiana\" />\n        <Input name=\"price\" placeholder=\"Ex: 19.90\" />\n\n        <Input name=\"description\" placeholder=\"Descrição\" />\n\n        <button type=\"submit\" data-testid=\"edit-food-button\">\n          <div className=\"text\">Editar Prato</div>\n          <div className=\"icon\">\n            <FiCheckSquare size={24} />\n          </div>\n        </button>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalEditFood;\n","import styled from 'styled-components';\n\nexport const FoodsContainer = styled.div`\n  width: 100%;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 40px 0;\n  margin-top: -140px;\n\n  display: grid;\n\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 32px;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\n\nimport api from '../../services/api';\n\nimport Food from '../../components/Food';\nimport ModalAddFood from '../../components/ModalAddFood';\nimport ModalEditFood from '../../components/ModalEditFood';\n\nimport { FoodsContainer } from './styles';\n\ninterface IFoodPlate {\n  id: number;\n  name: string;\n  image: string;\n  price: string;\n  description: string;\n  available: boolean;\n}\n\nconst Dashboard: React.FC = () => {\n  const [foods, setFoods] = useState<IFoodPlate[]>([]);\n  const [editingFood, setEditingFood] = useState<IFoodPlate>({} as IFoodPlate);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  useEffect(() => {\n    async function loadFoods(): Promise<void> {\n      const response = await api.get('/foods');\n\n      setFoods(response.data);\n    }\n\n    loadFoods();\n  }, []);\n\n  async function handleAddFood(\n    food: Omit<IFoodPlate, 'id' | 'available'>,\n  ): Promise<void> {\n    try {\n      const response = await api.post('/foods', {\n        ...food,\n        available: true,\n      });\n\n      setFoods([...foods, response.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateFood(\n    food: Omit<IFoodPlate, 'id' | 'available'>,\n  ): Promise<void> {\n    try {\n      const response = await api.put(`/foods/${editingFood.id}`, {\n        ...editingFood,\n        ...food,\n      });\n\n      setFoods(\n        foods.map(mappedFood =>\n          mappedFood.id === editingFood.id ? { ...response.data } : mappedFood,\n        )\n      )\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleDeleteFood(id: number): Promise<void> {\n    try {\n      await api.delete(`/foods/${id}`);\n\n      setFoods(foods.filter(food => food.id !== id));\n    } catch (err){\n      console.log(err);\n    }\n  }\n\n  function toggleModal(): void {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditFood(food: IFoodPlate): void {\n    setEditingFood(food);\n    toggleEditModal();\n  }\n\n  return (\n    <>\n      <Header openModal={toggleModal} />\n      <ModalAddFood\n        isOpen={modalOpen}\n        setIsOpen={toggleModal}\n        handleAddFood={handleAddFood}\n      />\n      <ModalEditFood\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingFood={editingFood}\n        handleUpdateFood={handleUpdateFood}\n      />\n\n      <FoodsContainer data-testid=\"foods-list\">\n        {foods &&\n          foods.map(food => (\n            <Food\n              key={food.id}\n              food={food}\n              handleDelete={handleDeleteFood}\n              handleEditFood={handleEditFood}\n            />\n          ))}\n      </FoodsContainer>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/Desafio-10-GoRestaurant-Web/\" exact component={Dashboard} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body {\n    background: #fff;\n    color: #FFF;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: 'Poppins', sans-serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n  <>\n    <GlobalStyle />\n    <Router>\n      <Routes />\n    </Router>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}